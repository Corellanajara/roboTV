/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xvdr.audio;

public class AC3DecoderNative {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AC3DecoderNative(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AC3DecoderNative obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        audiodecoderJNI.delete_AC3DecoderNative(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setChannelLayout(int value) {
    audiodecoderJNI.AC3DecoderNative_channelLayout_set(swigCPtr, this, value);
  }

  public int getChannelLayout() {
    return audiodecoderJNI.AC3DecoderNative_channelLayout_get(swigCPtr, this);
  }

  public AC3DecoderNative(int flags) {
    this(audiodecoderJNI.new_AC3DecoderNative(flags), true);
  }

  public int decode(byte[] BYTE, int offset, int length) {
    return audiodecoderJNI.AC3DecoderNative_decode(swigCPtr, this, BYTE, offset, length);
  }

  public boolean getOutput(byte[] BYTE, int offset, int length) {
    return audiodecoderJNI.AC3DecoderNative_getOutput(swigCPtr, this, BYTE, offset, length);
  }

  public int getChannels() {
    return audiodecoderJNI.AC3DecoderNative_getChannels(swigCPtr, this);
  }

  public int getSampleRate() {
    return audiodecoderJNI.AC3DecoderNative_getSampleRate(swigCPtr, this);
  }

  public int getBitRate() {
    return audiodecoderJNI.AC3DecoderNative_getBitRate(swigCPtr, this);
  }

  public final static int layoutStereo = audiodecoderJNI.AC3DecoderNative_layoutStereo_get();
  public final static int layoutDolby = audiodecoderJNI.AC3DecoderNative_layoutDolby_get();
  public final static int layout50 = audiodecoderJNI.AC3DecoderNative_layout50_get();
  public final static int layout51 = audiodecoderJNI.AC3DecoderNative_layout51_get();

}
